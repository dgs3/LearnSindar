package com.example.sindarstudyguide;

import java.util.Random;
import java.util.Vector;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Typeface;
import android.os.Bundle;
import android.support.v4.app.NavUtils;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.TextView;
import android.widget.Button;
import android.widget.CheckBox;
import com.example.sindarstudyguide.MainActivity;


class FlashCard{

    String[] sindarSide;
    String[] englishSide;
    boolean cardFaceUp = true;
    int currentSide;
    Random r;
    Typeface sindarTypeface;
    Typeface englishTypeface;

    public FlashCard(String[] sindarSide, String[] englishSide, Resources resources)
    {
        this.sindarSide = sindarSide;
        this.englishSide = englishSide;
        this.r = new Random();
        this.updateCard();
        this.sindarTypeface = Typeface.createFromAsset(resources.getAssets(), "fonts/TengwarSindarin.ttf");
        this.englishTypeface = Typeface.SERIF;
    }

    public void updateCard()
    {
        int new_index = r.nextInt(this.sindarSide.length);
        this.currentSide = new_index;
    }

    public void transitionCard() {
        if(!cardFaceUp)
        {
            this.updateCard();
        }
        cardFaceUp = !cardFaceUp;
    }

    public String getCurrentSide(Button drawButton)
    {
        String value = "ERROR";
        if(cardFaceUp)
        {
            drawButton.setTypeface(this.sindarTypeface);
            value = sindarSide[this.currentSide];
        }
        else
        {
            drawButton.setTypeface(this.englishTypeface);
            value = englishSide[this.currentSide];
        }
        return value;
    }
}

public class DisplayMessageActivity extends Activity implements OnClickListener{

    public boolean cardFaceUp = true;
    public FlashCard flashCard;
    public Button flashCardButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        this.findViewById(R.id.begin_phenome_flash_cards).setVisibility(View.GONE);
        this.findViewById(R.id.column_1).setVisibility(View.GONE);
        this.findViewById(R.id.column_2).setVisibility(View.GONE);
        this.findViewById(R.id.column_3).setVisibility(View.GONE);
        this.findViewById(R.id.column_4).setVisibility(View.GONE);
        this.findViewById(R.id.extra_characters).setVisibility(View.GONE);
        this.findViewById(R.id.tehtar).setVisibility(View.GONE);

        Resources res = getResources();
        Vector<String>[] cards = this.getCategories(res);
        flashCardButton = (Button) this.findViewById(R.id.flash); 
        flashCardButton.setVisibility(View.VISIBLE);
        flashCard = new FlashCard(cards[0], cards[1], res);
        this.flashCardButton.setOnClickListener(this);
        flashCardButton.setTextSize(60);
        flashCardButton.setText(flashCard.getCurrentSide(flashCardButton));
    }

    private Vector<String>[] getCategories(Resources resource){
        Vector<String> english_cards = new Vector();
        Vector<String> sindar_cards= new Vector();

//        CheckBox column_1 = (CheckBox) this.findViewById(R.id.column_1);
        if(((CheckBox)this.findViewById(R.id.column_1)).isChecked())
        {
            english_cards.addAll(resource.getStringArray("english_column_1").toList());
            sindar_cards.addAll(resource.getStringArray("sindar_column_1").toList());
        } 

        if(((CheckBox)this.findViewById(R.id.column_2)).isChecked())
        {
            english_cards.addAll(resource.getStringArray("english_column_2").toList());
            sindar_cards.addAll(resource.getStringArray("sindar_column_2").toList());
        } 
        
        if(((CheckBox)this.findViewById(R.id.column_3)).isChecked())
        {
            english_cards.addAll(resource.getStringArray("english_column_3").toList());
            sindar_cards.addAll(resource.getStringArray("sindar_column_3").toList());
        } 
        
        if(((CheckBox)this.findViewById(R.id.column_4)).isChecked())
        {
            english_cards.addAll(resource.getStringArray("english_column_4").toList());
            sindar_cards.addAll(resource.getStringArray("sindar_column_4").toList());
        } 
        
        if(((CheckBox)this.findViewById(R.id.extra_characters)).isChecked())
        {
            english_cards.addAll(resource.getStringArray("english_extra_characters").toList());
            sindar_cards.addAll(resource.getStringArray("sindar_extra_characters").toList());
        } 
        
        if(((CheckBox)this.findViewById(R.id.tehtar)).isChecked())
        {
            english_cards.addAll(resource.getStringArray("english_tehtar").toList());
            sindar_cards.addAll(resource.getStringArray("sindar_tehtar").toList());
        } 
        Vector<String>[] returnVals = {english_cards, sindar_cards};
        return returnVals; 
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
        case android.R.id.home:
            NavUtils.navigateUpFromSameTask(this);
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onClick(View v)
    {
        flashCard.transitionCard();
        flashCardButton.setText(flashCard.getCurrentSide(flashCardButton));
    }
}
